<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <!-- General for All Maven projects (lib and proj) -->
  
  <groupId>net.sf.jmimemagic</groupId>
  <artifactId>jmimemagic</artifactId>
  <version>0.1.3-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>jMimeMagic</name>
  <url>http://github.com/arimus/jmimemagic/</url>
  <description>jMimeMagic is a Java library for determining the content type of files or streams.</description>

  <developers>
    <developer>
      <id>arimus</id>
	  <name>David Castro</name>
	  <email>arimus@users.sourceforge.net</email>
      <roles>
         <role>Developer</role>
      </roles>
	  <organization>jmimemagic</organization>
      <timezone>-7</timezone>
    </developer>

    <developer>
	  <id>ndjones</id>
	  <name>Nate Jones</name>
	  <email>ndjones@users.sourceforge.net</email>
      <roles>
         <role>Developer</role>
      </roles>
	  <organization>jmimemagic</organization>
      <timezone>-7</timezone>
    </developer>
  </developers>

  <!-- use the following if you're not using a snapshot version. -->
  <distributionManagement>
    <repository>
      <id>jmimemagic-repo</id>
      <name>jMimeMagic Repo</name>
      <url>scm:svn:https://svn.sourceforge.net/svnroot/jmimemagic/trunk</url>
    </repository>
    <!-- use the following if you ARE using a snapshot version. -->
    <snapshotRepository>
      <id>jmimemagic-repo</id>
      <name>jMimeMagic Repo</name>
      <url>scm:svn:https://svn.sourceforge.net/svnroot/jmimemagic/trunk</url>
    </snapshotRepository>
  </distributionManagement>


  <!-- Repositories, currently used to make hibernate3:schema-export and jalopy work -->

  <!--
  <repositories>
    <repository>
      <id>Codehaus Snapshots</id>
      <url>http://snapshots.repository.codehaus.org</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
    <repository>
      <id>maven2-repository.dev.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>http://download.java.net/maven/2</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>repository.jboss.com</id>
      <name>JBoss Repository for Maven</name>
      <url>http://repository.jboss.com/maven2</url>
      <layout>default</layout>
    </repository>
  </repositories>
  -->

  <!-- Repositories, currently used to make hibernate3:schema-export work -->

  <!--
  <pluginRepositories>
    <pluginRepository>
      <id>Codehaus Snapshots</id>
      <url>http://snapshots.repository.codehaus.org</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>
  -->

  <build>

    <!-- turning filter on for resources and test, note - test resources dir will override any file with the same name in main resources when a test is ran.  -->
    <filters>
      <filter>src/main/filters/filter.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>*.properties</include>
          <include>*.xml</include>
          <include>*.dtd</include>
        </includes>
        <excludes>
          <exclude>log4j.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
      <testResource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>

      <!-- Code format java files, use mvn jalopy:format -->
      <!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jalopy-maven-plugin</artifactId>
        <version>1.0-SNAPSHOT</version>
        <configuration>
          <convention>geekoffice/jalopy.xml</convention>
          <failOnError>false</failOnError>
          <fileFormat>UNIX</fileFormat>
        </configuration>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>format</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      -->

      <!-- compile in jdk 1.5 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
      </plugin>
      -->

    </plugins>


    <extensions>

      <extension>
        <groupId>org.apache.maven.wagon</groupId>
         <artifactId>wagon-ssh-external</artifactId>
         <version>1.0-alpha-5</version>
      </extension>

    </extensions>

  </build>

  <!-- dependencies need by both lib and proj -->

  <dependencies>

    <!-- common compile time dependencies -->

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.0.4</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.1</version>
      <scope>compile</scope>
    </dependency>

    <!-- common runtime only dependencies -->

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.8</version>
      <scope>runtime</scope>
    </dependency>


    <!-- common testing only dependencies -->

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>

	<dependency>
	  <groupId>oro</groupId>
	  <artifactId>oro</artifactId>
	  <version>2.0.8</version>
	  <scope>compile</scope>
    </dependency>

	<dependency>
	  <groupId>xerces</groupId>
	  <artifactId>xercesImpl</artifactId>
	  <version>2.4.0</version>
	  <scope>runtime</scope>
	</dependency>

	<dependency>
	  <groupId>xml-apis</groupId>
	  <artifactId>xml-apis</artifactId>
	  <version>1.0.b2</version>
	  <scope>compile</scope>
	</dependency>

	<dependency>
	  <groupId>xml-apis</groupId>
	  <artifactId>xmlParserAPIs</artifactId>
	  <version>2.0.2</version>
	  <scope>compile</scope>
	</dependency>

  </dependencies>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

</project>
